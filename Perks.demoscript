Perk TOUGH_BODY
{
  defenseDamageFactor=-10000
  chance=0.1
  iconFrames=90
  defense="BodyDefense"

  Trigger TOUGH_BODY
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Me", event.Defense==defense, not event.Block, random() < chance )
    }
    
    Action
    {
      ModAttributes ( Player="Enemy", DamageFactor=defenseDamageFactor, Frames=1 )
      ModIcon ( Name="Icon", Frames=iconFrames )
    }
  }
}

Perk CRITICAL_RESIST_HEAD
{
  defenseDamageFactor=-15850
  chance=0.25
  iconFrames=90
  defense="HeadDefense"

  Trigger CRITICAL_RESIST_HEAD
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Critical, event.Target=="Me", event.Defense==defense, random() < chance )
    }
    
    Action
    {
      ModAttributes ( Player="Enemy", DamageFactor=defenseDamageFactor, Frames=1 )
      ModIcon ( Name="Icon", Frames=iconFrames )
    }
  }
}

Perk HELM_BREAKER
{
  attackDamageFactor = 5850
  chance = 0.2
  startBoostFrames = 60
  iconFrames = 300
  defense = "HeadDefense"

  Trigger HELM_BREAKER_INIT
  {
    Event
    {
      return "FightStart"
    }
    
    Condition
    {
      return true
    }
    
    Action
    {
      ModFlag ( Name="Denied", Frames=600)
    }
  }
	


  Trigger HELM_BREAKER_DOUBLEBOOST
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( not ModExists ( Name = "Denied" ), event.Target=="Enemy", event.Defense==defense, not event.Block, random() < chance, not ModExists ( Name = "Icon" ), not ModExists ( Name = "Double" ) )
    }
    
    Action
    {
      ModFlag ( Name="Double", Frames=startBoostFrames)
    }
  }
  

  Trigger HELM_BREAKER_BOOST
  {
    Event
    {
      return "ModExpires"
    }
    
    Condition
    {
      return event.Name=="Double"
    }
    
    Action
    {
      ModIcon ( Name="Icon", Frames=iconFrames-startBoostFrames, Player="Enemy" )
    }
  }

  Trigger HELM_BREAKER_DOUBLEBOOST_END
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Player="Enemy", event.Defense=defense, not event.Block, ModExists ( Name = "Start" ) )
    }
    
    Action
    {
      ModAttributes ( DamageFactor=attackDamageFactor*2, Frames="1" )
    }
  }


  Trigger HELM_BREAKER_BOOST_END
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Player="Enemy", event.Defense=defense, not event.Block, ModExists ( Name = "Icon" ) )
    }
    
    Action
    {
      ModAttributes ( DamageFactor=attackDamageFactor, Frames="1" )
    }
  }
}



Perk SHIELDING
{
  damageFactor=-10000
  frames=300
  guaranteedAtDamage=100

  Trigger SHIELDING
  {
    Event
    {
      return "PostHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Me", random () < event.Damage/guaranteedAtDamage, not ModExists ( "Shielding" )  )
    }
    
    Action
    {
      ModAttributes ( Name="Shielding", DamageFactor=damageFactor, Frames=frames, Player="Enemy" )
      ModIcon ( Name="Icon", Frames=frames )
    }
  }
}


Perk FITNESS
{
  attackAnyBoostChance = 0.02
  attackBoostChance = 0.3
  defenseBoostChance = 0.1
  attackDamageFactor = 10000
  defenseDamageFactor = -66439

  Trigger FITNESS_ATTACK
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Enemy", event.Animation=="Unarmed", random() < attackBoostChance )
    }
    
    Action
    {
      ModAttributes ( DamageFactor=attackDamageFactor, Frames=1, Player="Me" )
    }
  }
  Trigger FITNESS_ATTACK_ANY
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Enemy", random() < attackAnyBoostChance )
    }
    
    Action
    {
      ModAttributes ( DamageFactor=attackDamageFactor, Frames=1, Player="Me" )
    }
  }
  Trigger FITNESS_DEFENSE
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Me", random() < defenseBoostChance )
    }
    
    Action
    {
      ModAttributes ( DamageFactor=defenseDamageFactor, Frames=1, Player="Enemy" )
    }
  }
}



Perk RAGE
{
  attackBoostChance = 0.3
  attackDamageFactor = 2630

  Trigger RAGE_CHECK_SUCCESS
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Enemy", not event.Block, random() < attackBoostChance )
    }
    
    Action
    {
      CreateEvent ( Name="Success" )
      ModFlag(Name="Success", Frames=1)
    }
  }
  Trigger RAGE_CHECK_FAIL
  {
    Event
    {
      return "PreHit"
    }
    
    Condition
    {
      return AND ( event.Target=="Enemy", not event.Block, not ModExists( Name="Success" ))
    }
    
    Action
    {
      CreateEvent ( "Fail" )
    }
  }
  Trigger RAGE_SUCCESS_ICON
  {
    Event
    {
      return "Success"
    }
    
    Condition
    {
      return not ModExists ( Name="Icon" )
    }
    
    Action
    {
      ModIcon ( Name="Icon" )
    }
  }
  Trigger RAGE_SUCCESS_DAMAGE
  {
    Event
    {
      return "Success"
    }
    
    Condition
    {
      return true
    }
    
    Action
    {
      ModAttributes ( Name="StackedBonus", DamageFactor=defenseDamageFactor, Player="Me" )
    }
  }
  Trigger RAGE_FAIL
  {
    Event
    {
      return "Fail"
    }
    
    Condition
    {
      return true
    }
    
    Action
    {
      ClearMods ( Name="StackedBonus" )
      ClearMods ( Name="Icon" )
    }
  }
}

